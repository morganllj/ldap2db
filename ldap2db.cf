%config = (
	# oracle
	"oracle_base" => "/home/oracle",
	"oracle_home" => "/home/oracle/app/oracle/product/11.2.0.1/client_1",
	"connect_str" => "dbi:Oracle:host=ipaddr;port=port;sid=SID",
	"user" => "user",
	"pass" => "pass",
	"insert_stmt" => [ "INSERT INTO TABLE_NAME (VAL1, VAL2, VAL3) VALUES (?, ?, ?)",
		           "INSERT INTO TABLE_NAME2 (VAL4, VAL5, VAL6) VALUES (?, ?, ?)" ],

	"truncate_table" => "yes",
	"truncate_stmt" => [ 
	    "TRUNCATE TABLE GUARDIAN",
            "TRUNCATE TABLE RELATIONSHIP" ],

	# ldap
	"ldap_host" => "ldaps://sgldap.domain.net",
	"ldap_binddn" => "binddn",
	"ldap_pass" => "bindpass",
	"ldap_base" => "dc=domain,dc=org",
	"ldap_filter" => ["filter1",
			  "filter2"],
	"ldap_attrs" => [[qw/attr1 attr2 gen:attr3/],
		     	 [qw/singlekey:attr5 attr6 attr7/]],
	"skip_if_attrs_empty" => "yes",

	# optional

	# run a sub to modify (normalize) a value.
	# TODO: I believe this is redundant now that gen: functionality is working
        "normalize" => [
	    { "regex" => ["attr1", "attr2"],
	      "sub" => \&mod_attrs1and2 },
            { "regex" => ["date"],
	      "sub" => \&fix_date }
        ],

	"print_counts" => {
            "ldap_filter" => ["(objectclass=orgemployee)", "(objectclass=orgassociate)"]
        },
        "unique_key" => "orgAttrName",
        "notify_if_failure" => '2155551212@txt.att.net,morgan@domain.org',
        "email_from" => 'ldap-admin@domain.org',

        # compare data with what's already in the db and only insert differences
        "only_insert_diffs" => "yes"
);

sub mod_attrs1and2 {
 my ($attr, $value, $out) = @_;

 # modify $value

 return $value
}

sub gen_VAL3 {

    # do something
    return;
}
